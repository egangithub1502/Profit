name: Sync branches with conflict handling

on:
  push:
    branches:
      - profit_dep_hf_*
      - profit_dep_minor_*

jobs:
  branch-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up git
        run: |
          git config --global user.name 'egangithub1502'
          git config --global user.email '2010177071b@gmail.com'

      - name: Extract branch names
        id: extract-branch-names
        run: |
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          BRANCH_PREFIX=${BRANCH_NAME%_*}
          BRANCH_SUFFIX=${BRANCH_NAME##*_}
          MINOR_BRANCH="${BRANCH_PREFIX}_minor_${BRANCH_SUFFIX}"
          HF_BRANCH="${BRANCH_PREFIX}_hf_${BRANCH_SUFFIX}"
          
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "BRANCH_PREFIX=$BRANCH_PREFIX" >> $GITHUB_ENV
          echo "BRANCH_SUFFIX=$BRANCH_SUFFIX" >> $GITHUB_ENV
          echo "MINOR_BRANCH=$MINOR_BRANCH" >> $GITHUB_ENV
          echo "HF_BRANCH=$HF_BRANCH" >> $GITHUB_ENV

          # Debugging output
          echo "Debug: BRANCH_NAME=$BRANCH_NAME"
          echo "Debug: BRANCH_PREFIX=$BRANCH_PREFIX"
          echo "Debug: BRANCH_SUFFIX=$BRANCH_SUFFIX"
          echo "Debug: MINOR_BRANCH=$MINOR_BRANCH"
          echo "Debug: HF_BRANCH=$HF_BRANCH"

      - name: Attempt to merge HF into minor
        if: contains(steps.extract-branch-names.outputs.BRANCH_NAME, 'hf')
        id: merge_hf_to_minor
        run: |
          git fetch origin
          git checkout ${{ env.MINOR_BRANCH }}
          git merge origin/${{ env.HF_BRANCH }} || { echo "Merge conflict detected"; exit 1; }
          git push origin ${{ env.MINOR_BRANCH }}

      - name: Handle conflict between HF and minor
        if: failure() && contains(steps.extract-branch-names.outputs.BRANCH_NAME, 'hf')
        run: |
          git checkout -b temp/hf-to-minor-conflict
          git push origin temp/hf-to-minor-conflict
          # Send conflict notification to Google Chat
          curl -X POST -H 'Content-Type: application/json' -d '{
            "text": "Merge conflict detected while merging HF into minor. A temporary branch (temp/hf-to-minor-conflict) has been created for manual resolution. Conflicting files:\n\n'$(git diff --name-only HEAD^1 HEAD)'"
          }' ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}

      - name: Attempt to merge minor into master
        if: contains(steps.extract-branch-names.outputs.BRANCH_NAME, 'minor') || (contains(steps.extract-branch-names.outputs.BRANCH_NAME, 'hf') && success())
        id: merge_minor_to_master
        run: |
          git fetch origin
          git checkout master
          git merge origin/${{ env.MINOR_BRANCH }} || { echo "Merge conflict detected"; exit 1; }
          git push origin master

      - name: Handle conflict between minor and master
        if: failure() && (contains(steps.extract-branch-names.outputs.BRANCH_NAME, 'minor') || (contains(steps.extract-branch-names.outputs.BRANCH_NAME, 'hf') && success()))
        run: |
          git checkout -b temp/minor-to-master-conflict
          git push origin temp/minor-to-master-conflict
          # Send conflict notification to Google Chat
          curl -X POST -H 'Content-Type: application/json' -d '{
            "text": "Merge conflict detected while merging minor into master. A temporary branch (temp/minor-to-master-conflict) has been created for manual resolution. Conflicting files:\n\n'$(git diff --name-only HEAD^1 HEAD)'"
          }' ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
