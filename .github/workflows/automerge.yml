name: Sync branches with conflict handling

on:
  push:
    branches:
      - '*'  # Trigger on any branch

jobs:
  branch-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up git
        run: |
          git config --global user.name 'egangithub1502'
          git config --global user.email '2010177071b@gmail.com'

      - name: Fetch and Identify Latest Branches
        id: fetch_branches
        run: |
          git fetch --all
          hf_branch=$(git branch -r | grep 'profit_dep_hf_' | sed 's/origin\///' | sort -r | head -n 1)
          minor_branch=$(git branch -r | grep 'profit_dep_minor_' | sed 's/origin\///' | sort -r | head -n 1)
          echo "HF branch: $hf_branch"
          echo "Minor branch: $minor_branch"
          echo "HF_BRANCH=$hf_branch" >> $GITHUB_ENV
          echo "MINOR_BRANCH=$minor_branch" >> $GITHUB_ENV

      - name: Debug Branch Names
        run: |
          echo "HF Branch: ${{ env.HF_BRANCH }}"
          echo "Minor Branch: ${{ env.MINOR_BRANCH }}"
          git branch -a
          git log --oneline --graph --decorate --all

      - name: Attempt to merge HF into minor
        if: github.ref == 'refs/heads/${{ env.HF_BRANCH }}'
        id: merge_hf_to_minor
        run: |
          git fetch origin
          git checkout ${{ env.MINOR_BRANCH }}
          echo "Merging ${{ env.HF_BRANCH }} into ${{ env.MINOR_BRANCH }}"
          git merge ${{ env.HF_BRANCH }} --no-commit || {
            echo "Merge failed with exit code $?."
            git status
            git log --oneline --graph --decorate
            exit 1
          }
          git commit -m "Merged ${{ env.HF_BRANCH }} into ${{ env.MINOR_BRANCH }}" || true
          git push origin ${{ env.MINOR_BRANCH }}

      - name: Handle conflict between HF and minor
        if: failure() && github.ref == 'refs/heads/${{ env.HF_BRANCH }}'
        run: |
          echo "Checking for conflicts..."
          if git ls-files -u | grep -q '^'; then
            git checkout -b temp/hf-to-minor-conflict
            git push origin temp/hf-to-minor-conflict
            curl -X POST -H 'Content-Type: application/json' -d '{
              "text": "Merge conflict detected while merging ${{ env.HF_BRANCH }} into ${{ env.MINOR_BRANCH }}. A temporary branch (temp/hf-to-minor-conflict) has been created for manual resolution. Conflicting files:\n\n'$(git diff --name-only HEAD^1 HEAD)'"
            }' ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          else
            echo "Merge failed but not due to conflicts."
            git status
            git log --oneline --graph --decorate
            exit 1
          fi

      - name: Attempt to merge minor into master
        if: github.ref == 'refs/heads/${{ env.MINOR_BRANCH }}' || (github.ref == 'refs/heads/${{ env.HF_BRANCH }}' && success())
        id: merge_minor_to_master
        run: |
          git fetch origin
          git checkout master
          echo "Merging ${{ env.MINOR_BRANCH }} into master"
          git merge ${{ env.MINOR_BRANCH }} --no-commit || {
            echo "Merge failed with exit code $?."
            git status
            git log --oneline --graph --decorate
            exit 1
          }
          git commit -m "Merged ${{ env.MINOR_BRANCH }} into master" || true
          git push origin master

      - name: Handle conflict between minor and master
        if: failure() && (github.ref == 'refs/heads/${{ env.MINOR_BRANCH }}' || (github.ref == 'refs/heads/${{ env.HF_BRANCH }}' && success()))
        run: |
          echo "Checking for conflicts..."
          if git ls-files -u | grep -q '^'; then
            git checkout -b temp/minor-to-master-conflict
            git push origin temp/minor-to-master-conflict
            curl -X POST -H 'Content-Type: application/json' -d '{
              "text": "Merge conflict detected while merging ${{ env.MINOR_BRANCH }} into master. A temporary branch (temp/minor-to-master-conflict) has been created for manual resolution. Conflicting files:\n\n'$(git diff --name-only HEAD^1 HEAD)'"
            }' ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
          else
            echo "Merge failed but not due to conflicts."
            git status
            git log --oneline --graph --decorate
            exit 1
          fi
