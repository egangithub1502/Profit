name: Sync branches with conflict handling

on: 
  push:
    branches:
      - '*'

jobs: 
  branch-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up git
        run: |
          git config --global user.name 'egangithub1502'
          git config --global user.email '2010177071b@gmail.com'

      - name: Sync branches
        run: |
          # Extract branch name from the reference
          branch_name="${GITHUB_REF#refs/heads/}"
          
          # Determine if this is an HF or minor branch
          case "$branch_name" in
            profit_dep_hf_*)
              BRANCH_TYPE="hf"
              ;;
            profit_dep_minor_*)
              BRANCH_TYPE="minor"
              ;;
            *)
              BRANCH_TYPE="none"
              ;;
          esac
          
          echo "Branch Type: $BRANCH_TYPE"
          
          if [ "$BRANCH_TYPE" == "hf" ]; then
            # Get the latest HF branch
            latest_hf_branch=$(git branch -r | grep 'origin/profit_dep_hf_' | sed 's/origin\///' | sort -r | head -n 1 | xargs)
            echo "Latest HF branch: $latest_hf_branch"
            
            # Get the latest minor branch
            latest_minor_branch=$(git branch -r | grep 'origin/profit_dep_minor_' | sed 's/origin\///' | sort -r | head -n 1 | xargs)
            echo "Latest minor branch: $latest_minor_branch"

            # Merge HF into minor
            git fetch origin
            git checkout "$latest_minor_branch"
            git merge --no-commit --no-ff "origin/$latest_hf_branch" || true
            if [ $? -ne 0 ]; then
              echo "Merge conflict detected."
              git checkout -b "temp/hf-to-minor-conflict"
              git push origin "temp/hf-to-minor-conflict"
              echo "Conflict branch created: temp/hf-to-minor-conflict"
              exit 1
            fi
            git commit -m "Merge $latest_hf_branch into $latest_minor_branch"
            git push origin "$latest_minor_branch"
            
            # Attempt to merge minor into master
            git fetch origin
            git checkout master
            git merge --no-commit --no-ff "origin/$latest_minor_branch" || true
            if [ $? -ne 0 ]; then
              echo "Merge conflict detected."
              git checkout -b "temp/minor-to-master-conflict"
              git push origin "temp/minor-to-master-conflict"
              echo "Conflict branch created: temp/minor-to-master-conflict"
              exit 1
            fi
            git commit -m "Merge $latest_minor_branch into master"
            git push origin master
          elif [ "$BRANCH_TYPE" == "minor" ]; then
            # Handle minor branch syncs separately if needed
            echo "Processing minor branch only."
          fi

      - name: Notify Google Chat on Success
        if: success()
        run: |
          curl -X POST -H 'Content-Type: application/json' --data '{"text": "Sync branches job succeeded."}' ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}

      - name: Notify Google Chat on Failure
        if: failure()
        run: |
          curl -X POST -H 'Content-Type: application/json' --data '{"text": "Sync branches job failed."}' ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
